# backend
upstream backend {
    server k11d206.p.ssafy.io:8081;  # 스프링 부트 백엔드
}

upstream fastapi {
    server k11d206.p.ssafy.io:8000;  # FastAPI 서버
}

# HTTP to HTTPS redirection
server {
    listen 80;
    listen [::]:80; # IPv6
    server_name k11d206.p.ssafy.io;

    # 모든 HTTP 요청을 HTTPS로 리디렉션
    return 301 https://$host$request_uri;
    
    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /"; # Disallow all bots
    }
}


# HTTPS configuration
server {
    listen 443 ssl;
    server_name k11d206.p.ssafy.io;

    # SSL 인증서 경로 (Let's Encrypt)
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # 보안 강화를 위한 SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # root 디렉터리 설정
    root /usr/share/nginx/html;
    index index.html;

    # 최대 요청 크기 설정 (예: 10MB로 설정)
    client_max_body_size 10M;

    # CORS 헤더 추가
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

    # FastAPI 요청 처리
    location /fastapi/ {
        proxy_pass http://fastapi;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 지원을 위한 설정 (필요한 경우)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # 스프링 부트 API 요청 처리
    location /api/ {
        # 디버깅을 위한 로그 추가
        error_log /var/log/nginx/api_error.log debug;
        access_log /var/log/nginx/api_access.log;

        # 원래 URI 유지를 위해 슬래시 추가
        proxy_pass http://backend/;   
        
        # 프록시 버퍼 설정 추가
        proxy_buffers 16 32k;
        proxy_buffer_size 32k;
        
        proxy_set_header Host $http_host;  # $host 대신 $http_host 사용
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정 추가
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;

        # CORS 설정 개선
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
    }

    # 정적 파일 처리
    location ~* \.(js|css|html|jpg|jpeg|png|gif|ico)$ {
        try_files $uri =404;
    }

    # 기본 라우팅
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }
}
